{"version":3,"sources":["services/personService.js","components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","newFilter","handleFilterChange","value","onChange","Person","person","removePerson","key","name","number","onClick","Persons","persons","map","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","NotifySuccess","message","includes","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notifyMessage","setNotifyMessage","useEffect","personService","initialPersons","CheckForDuplicates","i","length","personsToBeShown","filter","toLowerCase","event","target","preventDefault","nameObject","window","confirm","allPersons","duplicatePerson","returnedPerson","UpdatedList","setTimeout","catch","error","concat","newList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fb3898d.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst replace = (newObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, replace, remove }","import React from 'react'\r\n\r\nconst Filter = ({ newFilter, handleFilterChange }) => {\r\n    return (\r\n        <input value={newFilter} onChange={handleFilterChange} />\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = ({ person, removePerson }) => {\r\n    return (\r\n        <li key={person.name}>\r\n            {person.name} {person.number}\r\n            <button onClick={removePerson}>{\"delete\"}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, removePerson }) => {\r\n    return (\r\n        persons.map(person =>\r\n            <Person\r\n                key={person.name}\r\n                person={person}\r\n                removePerson = {() => removePerson(person.id)}\r\n            />\r\n        )\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({ onSubmit, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div> name: <input value={newName} onChange={handleNameChange} /> </div>\r\n            <div> number: <input value={newNumber} onChange={handleNumberChange} /> </div>\r\n            <div> <button type=\"submit\">add</button> </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React, { useState, useEffect } from 'react'\r\n\r\nimport personService from './services/personService'\r\n\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [notifyMessage, setNotifyMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const nameObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        let nameIsDuplicate = CheckForDuplicates(newName)\r\n        if (nameIsDuplicate) {\r\n            let replaceNumberBool = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\r\n            if (replaceNumberBool) {\r\n                personService\r\n                .getAll()\r\n                .then(allPersons => {\r\n                    let duplicatePerson = allPersons.filter(person => person.name === newName)\r\n                    personService\r\n                    .replace(nameObject, duplicatePerson[0].id)\r\n                    .then(returnedPerson => {\r\n                        const UpdatedList = persons.map(person => person.name !== returnedPerson.name ? person : returnedPerson )\r\n                        setPersons(UpdatedList)\r\n                        setNotifyMessage(`Updated phone number of ${returnedPerson.name}.`)\r\n                        setTimeout(() => {\r\n                            setNotifyMessage(null)\r\n                          }, 3000)\r\n                    })\r\n                    .catch(error => {\r\n                        setNotifyMessage(\r\n                          `ERROR: the person with name ${newName} was already deleted from server`\r\n                        )\r\n                        setPersons(persons.filter(person => person.id !== duplicatePerson[0].id))\r\n                        setTimeout(() => {\r\n                            setNotifyMessage(null)\r\n                          }, 5000)\r\n                      })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            personService\r\n            .create(nameObject)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson))\r\n                setNotifyMessage(`Added ${returnedPerson.name}.`)\r\n                setTimeout(() => {\r\n                    setNotifyMessage(null)\r\n                  }, 3000)\r\n            })\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const removePerson = id => {\r\n        personService\r\n        .remove(id)\r\n        .then(() => {\r\n            const newList = persons.filter(person => person.id !== id)\r\n            setPersons(newList)\r\n            setNotifyMessage(\"Deleted some person.\")\r\n            setTimeout(() => {\r\n                setNotifyMessage(null)\r\n              }, 3000)\r\n        })\r\n    }\r\n\r\n    const CheckForDuplicates = (newName) => {\r\n        for (var i = 0; i < persons.length; i++) {\r\n            if (persons[i].name === newName) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    const personsToBeShown = persons.filter(person => person.name.toLowerCase().includes(newFilter))\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <NotifySuccess message={notifyMessage}/>\r\n            filter shown with\r\n            <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\r\n            <h2>Add a new</h2>\r\n            <PersonForm\r\n                onSubmit={addPerson}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber}\r\n                handleNumberChange={handleNumberChange} />\r\n            <h2>Numbers</h2>\r\n            <Persons persons={personsToBeShown} removePerson={removePerson} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NotifySuccess = ({ message }) => {\r\n    const successStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n      }\r\n    const errorStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n      }\r\n\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    \r\n    if (message.includes(\"ERROR\")) {\r\n        return (\r\n            <div className=\"error\" style={errorStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"success\" style={successStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}